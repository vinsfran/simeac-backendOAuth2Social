spring:
  datasource:
    url: jdbc:postgresql://126.10.10.10:5432/simeac_db
    username: acceso
    password: acceso01
    driver-class-name: org.postgresql.Driver
    tomcat:
      test-while-idle: true
      validation-query: SELECT 1

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
      implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL95Dialect
        format_sql: true
        temp:
          use_jdbc_metadata_defaults: false
        jdbc:
          lob:
            non_contextual_creation: true
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 657536305346-nlqabheib52mgiq9r7di8540vbmroepl.apps.googleusercontent.com3
            clientSecret: 3VVd0sUl2eEH3Pdc8dKMxc4e3
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
            - email
            - profile
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
    - http://localhost:3000/oauth2/redirect
    - http://localhost:4200/oauth2/redirect
    - myandroidapp://oauth2/redirect
    - myiosapp://oauth2/redirect
